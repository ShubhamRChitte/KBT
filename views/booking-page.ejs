<!-- Scripts for reservation page -->
<script src="/js/booking-page.js"></script>
<script src="/js/booking-summary.js"></script>
<script src="/js/booking-validation.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Table dropdown selection
    const tableSelect = document.getElementById('selected-table-id');
    const tableNameInput = document.getElementById('selected-table-name');
    
    if (tableSelect) {
      tableSelect.addEventListener('change', function() {
        const selectedValue = this.value;
        let tableName = '';
        
        // Set the table name based on selected value
        switch (selectedValue) {
          case '1':
            tableName = 'Table for 2 guests';
            break;
          case '2':
            tableName = 'Table for 4 guests';
            break;
          case '3':
            tableName = 'Table for 6 guests';
            break;
          case '4':
            tableName = 'Table for 8 guests';
            break;
          default:
            tableName = '';
        }
        
        // Update hidden input with table name
        if (tableNameInput) {
          tableNameInput.value = tableName;
        }
        
        // Update the booking summary if function exists
        updateBookingSummary();
      });
    }
    
    // Show people count based on party size selection
    const peopleSelect = document.getElementById('people-count');
    
    if (peopleSelect && tableSelect) {
      peopleSelect.addEventListener('change', function() {
        const count = parseInt(this.value, 10);
        
        // Recommend appropriate table size
        let recommendedOption = '';
        
        if (count <= 2) {
          recommendedOption = '1'; // Table for 2
        } else if (count <= 4) {
          recommendedOption = '2'; // Table for 4
        } else if (count <= 6) {
          recommendedOption = '3'; // Table for 6
        } else {
          recommendedOption = '4'; // Table for 8
        }
        
        // Highlight the recommended option
        Array.from(tableSelect.options).forEach(option => {
          if (option.value === recommendedOption) {
            tableSelect.value = recommendedOption;
            // Trigger the change event to update the summary
            tableSelect.dispatchEvent(new Event('change'));
            
            showToastMessage(`Recommended table selected based on party size`);
          }
        });
      });
    }
    
    // Time slot selection buttons
    const timeSlotButtons = document.querySelectorAll('.time-slot-btn');
    const timeSelect = document.getElementById('booking-time');
    const timeDisplayElement = document.getElementById('selected-time-display');
    
    if (timeSlotButtons.length > 0 && timeSelect) {
      timeSlotButtons.forEach(button => {
        button.addEventListener('click', function() {
          // Remove the selected class from all buttons
          timeSlotButtons.forEach(btn => btn.classList.remove('selected'));
          
          // Add the selected class to this button
          this.classList.add('selected');
          
          // Get the selected time value
          const selectedTime = this.getAttribute('data-time');
          
          // Update the hidden select dropdown
          timeSelect.value = selectedTime;
          
          // Update the display
          if (timeDisplayElement) {
            timeDisplayElement.textContent = this.textContent;
            timeDisplayElement.style.color = 'var(--gold-crayola)';
          }
          
          // Show a toast message
          showToastMessage(`Time slot ${this.textContent} selected`);
          
          // Update the booking summary
          updateBookingSummary();
        });
      });
    }
    
    // Form validation for time slot
    const bookingForm = document.getElementById('booking-form');
    if (bookingForm) {
      bookingForm.addEventListener('submit', function(e) {
        if (timeSelect && timeSelect.value === '') {
          e.preventDefault();
          showToastMessage('Please select a time slot', true);
          document.querySelector('.time-slot-selection').scrollIntoView({ behavior: 'smooth' });
        }
      });
    }
    
    // Function to update booking summary
    function updateBookingSummary() {
      const summaryElem = document.getElementById('booking-summary');
      if (!summaryElem) return;
      
      // Get all selected values
      const name = document.getElementById('customer-name')?.value || '';
      const date = document.getElementById('booking-date')?.value || '';
      const time = timeSelect?.value || '';
      const people = peopleSelect?.value || '';
      const table = tableNameInput?.value || '';
      
      // Format date if available
      let formattedDate = '';
      if (date) {
        const dateObj = new Date(date);
        formattedDate = dateObj.toLocaleDateString('en-US', {
          weekday: 'long',
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        });
      }
      
      // Create the summary
      summaryElem.innerHTML = `
        <h3>Your Booking Summary</h3>
        <div style="padding: 15px; color: #fff;">
          ${name ? `<p><strong>Name:</strong> ${name}</p>` : ''}
          ${people ? `<p><strong>Party Size:</strong> ${people} ${people === '1' ? 'person' : 'people'}</p>` : ''}
          ${table ? `<p><strong>Table Type:</strong> ${table}</p>` : ''}
          ${formattedDate ? `<p><strong>Date:</strong> ${formattedDate}</p>` : ''}
          ${time ? `<p><strong>Time:</strong> ${time.replace('am', ' AM').replace('pm', ' PM')}</p>` : ''}
        </div>
      `;
    }
    
    // Helper function to show toast messages
    function showToastMessage(message, isError = false) {
      const feedbackMsg = document.createElement('div');
      feedbackMsg.className = 'table-selection-feedback';
      feedbackMsg.innerHTML = message;
      feedbackMsg.style.position = 'fixed';
      feedbackMsg.style.bottom = '20px';
      feedbackMsg.style.right = '20px';
      feedbackMsg.style.padding = '10px 20px';
      feedbackMsg.style.backgroundColor = isError ? '#dc3545' : '#28a745';
      feedbackMsg.style.color = 'white';
      feedbackMsg.style.borderRadius = '5px';
      feedbackMsg.style.zIndex = '1000';
      feedbackMsg.style.opacity = '0';
      feedbackMsg.style.transform = 'translateY(20px)';
      feedbackMsg.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
      
      document.body.appendChild(feedbackMsg);
      
      // Show the message with animation
      setTimeout(() => {
        feedbackMsg.style.opacity = '1';
        feedbackMsg.style.transform = 'translateY(0)';
      }, 10);
      
      // Remove after 3 seconds
      setTimeout(() => {
        feedbackMsg.style.opacity = '0';
        feedbackMsg.style.transform = 'translateY(20px)';
        setTimeout(() => {
          document.body.removeChild(feedbackMsg);
        }, 300);
      }, 3000);
    }
  });
</script> 